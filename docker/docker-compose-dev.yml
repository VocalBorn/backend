name: vocalborn

services:
  # 資料庫
  postgres:
    image: postgres:17
    container_name: vocalborn-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO 物件儲存服務
  minio:
    image: minio/minio:latest
    container_name: vocalborn-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ${MINIO_DATA_PATH}:/data
    ports:
      - "9000:9000"
      - "9002:9002"
    command: server /data --console-address ":9002"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vocalborn-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
  # 後端應用服務
  backend:
    # image: sindy0514/vocalborn-backend:latest
    build: 
      context: ../
      dockerfile: Dockerfile
    container_name: vocalborn-backend
    environment:
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      DB_ADDRESS: ${DB_ADDRESS}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_USERNAME: ${SMTP_USERNAME}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      SMTP_PORT: ${SMTP_PORT}
      MAIL_FROM: ${MAIL_FROM}
      BASE_URL: ${BASE_URL}
    ports:
      - "8001:8000"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
  # 新增 nginx 反向代理服務
  nginx:
    image: nginx:latest
    container_name: vocalborn-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - backend
    restart: unless-stopped
  # 自動更新容器服務 
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 vocalborn-backend
volumes:
  pgadmin_data: