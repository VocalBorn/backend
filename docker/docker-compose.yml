version: "3.8"
services:
  postgres:
    image: postgres:17
    container_name: vocalborn-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSGRES_LOCATION}:/var/lib/postgresql/data
    ports: []
    restart: always
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on: []
  minio:
    image: minio/minio:latest
    container_name: vocalborn-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ${MINIO_LOCATION}:/data
    ports:
      - ${MINIO_API_PORT}:9000
      - ${MINIO_CONSOLE_PORT}:9002
    command: server /data --console-address ":9002"
    restart: always
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9000/minio/health/ready
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vocalborn-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vocalborn.com
      PGADMIN_DEFAULT_PASSWORD: NtGp3248ch
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ${PGADMIN_LOCATION}:/var/lib/pgadmin
    ports:
      - ${PGADMIN_PORT}:80
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
  backend:
    image: sindy0514/vocalborn-backend:latest
    container_name: vocalborn-backend
    environment:
      DB_ADDRESS: vocalborn-postgres
      DB_PORT: ${BACKEND_PORT}
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      EMAIL_SERVICE_HOST: ${EMAIL_SERVICE_HOST}
      EMAIL_SERVICE_PORT: ${EMAIL_SERVICE_PORT}
      BASE_URL: https://api-vocalborn.r0930514.work
    ports:
      - ${BACKEND_PORT}:8000
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
networks:
  vocalborn-services: {}
  "": {}