name: Docker Deploy

on:
  # 只在 main 分支推送時觸發
  push:
    branches:
      - main
  workflow_dispatch:
    # 手動觸發也只允許在 main 分支

jobs:
  # 首先確保測試通過
  check-tests:
    name: Verify Tests Pass
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for unit tests
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Run Unit Tests'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30

      - name: Confirm tests passed
        run: |
          echo "✅ Unit tests have passed, proceeding with Docker build..."

  # Docker 構建和推送
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [check-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display deployment info
        run: |
          echo "=== VocalBorn Docker Deployment ==="
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "🐳 Building and pushing Docker image..."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: sindy0514/vocalborn-backend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}

      - name: Deployment success
        run: |
          echo "🎉 Docker image successfully built and pushed!"
          echo "Available tags:"
          echo "${{ steps.meta.outputs.tags }}"